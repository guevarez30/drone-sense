{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useUser = void 0;\nconst UserContext_1 = require(\"../contexts/UserContext\");\n/**\n * Returns the current auth state and if a user is signed in, the user object.\n *\n * Until Clerk loads and initializes, `isLoaded` will be set to `false`.\n * Once Clerk loads, `isLoaded` will be set to `true`, and you can\n * safely access `isSignedIn` state and `user`.\n *\n * For projects using NextJs or Remix, you can make this state available during SSR\n * simply by using the `withServerSideAuth` helper and setting the `loadUser` flag to `true`.\n *\n *\n * @example\n * A simple example:\n *\n * import { useUser } from '@clerk/clerk-react'\n *\n * function Hello() {\n *   const { isSignedIn, user } = useUser();\n *   if(!isSignedIn) {\n *     return null;\n *   }\n *   return <div>Hello, {user.firstName}</div>\n * }\n *\n * @example\n * Basic example in a NextJs app. This page will be fully rendered during SSR:\n *\n * import { useUser } from '@clerk/nextjs'\n * import { withServerSideAuth } from '@clerk/nextjs/api'\n *\n * export getServerSideProps = withServerSideAuth({ loadUser: true});\n *\n * export HelloPage = () => {\n *   const { isSignedIn, user } = useUser();\n *   if(!isSignedIn) {\n *     return null;\n *   }\n *   return <div>Hello, {user.firstName}</div>\n * }\n *\n */\nfunction useUser() {\n  const user = (0, UserContext_1.useUserContext)();\n  if (user === undefined) {\n    return {\n      isLoaded: false,\n      isSignedIn: undefined,\n      user: undefined\n    };\n  }\n  if (user === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      user: null\n    };\n  }\n  return {\n    isLoaded: true,\n    isSignedIn: true,\n    user\n  };\n}\nexports.useUser = useUser;","map":{"version":3,"names":["Object","defineProperty","exports","value","useUser","UserContext_1","require","user","useUserContext","undefined","isLoaded","isSignedIn"],"sources":["/home/taylorguevarez/code/clerk/app/node_modules/@clerk/clerk-react/dist/hooks/useUser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useUser = void 0;\nconst UserContext_1 = require(\"../contexts/UserContext\");\n/**\n * Returns the current auth state and if a user is signed in, the user object.\n *\n * Until Clerk loads and initializes, `isLoaded` will be set to `false`.\n * Once Clerk loads, `isLoaded` will be set to `true`, and you can\n * safely access `isSignedIn` state and `user`.\n *\n * For projects using NextJs or Remix, you can make this state available during SSR\n * simply by using the `withServerSideAuth` helper and setting the `loadUser` flag to `true`.\n *\n *\n * @example\n * A simple example:\n *\n * import { useUser } from '@clerk/clerk-react'\n *\n * function Hello() {\n *   const { isSignedIn, user } = useUser();\n *   if(!isSignedIn) {\n *     return null;\n *   }\n *   return <div>Hello, {user.firstName}</div>\n * }\n *\n * @example\n * Basic example in a NextJs app. This page will be fully rendered during SSR:\n *\n * import { useUser } from '@clerk/nextjs'\n * import { withServerSideAuth } from '@clerk/nextjs/api'\n *\n * export getServerSideProps = withServerSideAuth({ loadUser: true});\n *\n * export HelloPage = () => {\n *   const { isSignedIn, user } = useUser();\n *   if(!isSignedIn) {\n *     return null;\n *   }\n *   return <div>Hello, {user.firstName}</div>\n * }\n *\n */\nfunction useUser() {\n    const user = (0, UserContext_1.useUserContext)();\n    if (user === undefined) {\n        return { isLoaded: false, isSignedIn: undefined, user: undefined };\n    }\n    if (user === null) {\n        return { isLoaded: true, isSignedIn: false, user: null };\n    }\n    return { isLoaded: true, isSignedIn: true, user };\n}\nexports.useUser = useUser;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,aAAa,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,OAAOA,CAAA,EAAG;EACf,MAAMG,IAAI,GAAG,CAAC,CAAC,EAAEF,aAAa,CAACG,cAAc,GAAG;EAChD,IAAID,IAAI,KAAKE,SAAS,EAAE;IACpB,OAAO;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAEF,SAAS;MAAEF,IAAI,EAAEE;IAAU,CAAC;EACtE;EACA,IAAIF,IAAI,KAAK,IAAI,EAAE;IACf,OAAO;MAAEG,QAAQ,EAAE,IAAI;MAAEC,UAAU,EAAE,KAAK;MAAEJ,IAAI,EAAE;IAAK,CAAC;EAC5D;EACA,OAAO;IAAEG,QAAQ,EAAE,IAAI;IAAEC,UAAU,EAAE,IAAI;IAAEJ;EAAK,CAAC;AACrD;AACAL,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}